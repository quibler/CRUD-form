{"ast":null,"code":"var _jsxFileName = \"/home/quibler/face-recognition-brain/src/App.js\";\nimport React, { Component } from 'react'; // import Particles from 'react-particles-js';\n// import FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'; // import Rank from './components/Rank/Rank';\n\nimport './App.css'; // const particlesOptions = {\n//   particles: {\n//     number: {\n//       value: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/quibler/face-recognition-brain/src/App.js"],"names":["React","Component","Navigation","Signin","Register","Logo","ImageLinkForm","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","onInputChange","event","input","target","value","onRouteChange","route","isSignedIn","state","imageUrl","box","render","onButtonSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import Particles from 'react-particles-js';\n// import FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\n// import Rank from './components/Rank/Rank';\nimport './App.css';\n\n// const particlesOptions = {\n//   particles: {\n//     number: {\n//       value: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  // onButtonSubmit = () => {\n  //   this.setState({imageUrl: this.state.input});\n  //   app.models\n  //     .predict(\n  //       // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n  //       // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n  //       // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n  //       // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n  //       // is to use a different version of their model that works like: `c0c0ac362b03416da06ab3fa36fb58e3`\n  //       // so you would change from:\n  //       // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n  //       // to:\n  //       // .predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n  //       Clarifai.FACE_DETECT_MODEL,\n  //       this.state.input)\n  //     .then(response => {\n  //       console.log('hi', response)\n  //       if (response) {\n  //         fetch('http://localhost:3000/image', {\n  //           method: 'put',\n  //           headers: {'Content-Type': 'application/json'},\n  //           body: JSON.stringify({\n  //             id: this.state.user.id\n  //           })\n  //         })\n  //           .then(response => response.json())\n  //           .then(count => {\n  //             this.setState(Object.assign(this.state.user, { entries: count}))\n  //           })\n\n  //       }\n  //       this.displayFaceBox(this.calculateFaceLocation(response))\n  //     })\n  //     .catch(err => console.log(err));\n  // }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n         {/* <Particles className='particles'\n          params={particlesOptions}\n        /> */}\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              {/* <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              /> */}\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              {/* <FaceRecognition box={box} imageUrl={imageUrl} /> */}\n            </div>\n          : (\n             route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}