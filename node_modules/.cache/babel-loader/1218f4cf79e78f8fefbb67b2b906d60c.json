{"ast":null,"code":"var _jsxFileName = \"/home/quibler/frontend/src/components/ImageLinkForm/ImageLinkForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ImageLinkForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageLinkForm = () => {\n  _s();\n\n  const initialResp = [{\n    qid: 1,\n    resp: \"\"\n  }, {\n    qid: 1,\n    resp: \"\"\n  }, {\n    qid: 1,\n    resp: \"\"\n  }, {\n    qid: 1,\n    resp: \"\"\n  }, {\n    qid: 1,\n    resp: \"\"\n  }];\n  const [questions, setQuestions] = useState();\n  useEffect(() => {\n    fetch(\"http://localhost:3000/form\").then(response => response.json()).then(questions => setQuestions(questions));\n  }, []);\n  const [responses, setResponses] = useState();\n  useEffect(() => {\n    try {\n      fetch(\"http://localhost:3000/showresponses/1\").then(data => data.json()).then(responses => {\n        setResponses(responses);\n        console.log(responses);\n      });\n    } catch (error) {\n      alert(\"there was an error fetching your responses\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form center pa4 br3 shadow-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: questions && questions[0].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"f4 pa2 w-70 center\",\n          type: \"text\",\n          value: responses && responses[0].resp,\n          name: \"one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: questions && questions[1].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"f4 pa2 w-70 center\",\n          type: \"text\",\n          name: \"two\",\n          value: responses && responses[1].resp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: questions && questions[2].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"f4 pa2 w-70 center\",\n          type: \"text\",\n          name: \"three\",\n          value: responses && responses[2].resp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: questions && questions[3].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"f4 pa2 w-70 center\",\n          type: \"text\",\n          name: \"four\",\n          value: responses && responses[3].resp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: questions && questions[4].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"f4 pa2 w-70 center\",\n          type: \"text\",\n          name: \"five\",\n          value: responses && responses[4].resp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\" // onClick={onButtonSubmit}\n          ,\n          children: \"Detect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageLinkForm, \"sJg8jbWvUcuLIUSrz/NyucC1gmw=\");\n\n_c = ImageLinkForm;\nexport default ImageLinkForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageLinkForm\");","map":{"version":3,"sources":["/home/quibler/frontend/src/components/ImageLinkForm/ImageLinkForm.js"],"names":["React","Fragment","useState","useEffect","ImageLinkForm","initialResp","qid","resp","questions","setQuestions","fetch","then","response","json","responses","setResponses","data","console","log","error","alert","question"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ImageLinkForm.css\";\n\nconst ImageLinkForm = () => {\n  const initialResp = [\n    { qid: 1, resp: \"\" },\n    { qid: 1, resp: \"\" },\n    { qid: 1, resp: \"\" },\n    { qid: 1, resp: \"\" },\n    { qid: 1, resp: \"\" },\n  ];\n  const [questions, setQuestions] = useState();\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/form\")\n      .then((response) => response.json())\n      .then((questions) => setQuestions(questions));\n  }, []);\n\n  const [responses, setResponses] = useState();\n\n  useEffect(() => {\n    try {\n      fetch(\"http://localhost:3000/showresponses/1\")\n        .then((data) => data.json())\n        .then((responses) => {\n          setResponses(responses);\n          console.log(responses);\n        });\n    } catch (error) {\n      alert(\"there was an error fetching your responses\");\n    }\n  }, []);\n\n  return (\n    <div>\n      <div className=\"center\">\n        <form className=\"form center pa4 br3 shadow-5\">\n          <label>{questions && questions[0].question}</label>\n          <input\n            className=\"f4 pa2 w-70 center\"\n            type=\"text\"\n            value={responses && responses[0].resp}\n            name=\"one\"\n          />\n          <label>{questions && questions[1].question}</label>\n          <input\n            className=\"f4 pa2 w-70 center\"\n            type=\"text\"\n            name=\"two\"\n            value={responses && responses[1].resp}\n          />\n          <label>{questions && questions[2].question}</label>\n          <input\n            className=\"f4 pa2 w-70 center\"\n            type=\"text\"\n            name=\"three\"\n            value={responses && responses[2].resp}\n          />\n          <label>{questions && questions[3].question}</label>\n          <input\n            className=\"f4 pa2 w-70 center\"\n            type=\"text\"\n            name=\"four\"\n            value={responses && responses[3].resp}\n          />\n          <label>{questions && questions[4].question}</label>\n          <input\n            className=\"f4 pa2 w-70 center\"\n            type=\"text\"\n            name=\"five\"\n            value={responses && responses[4].resp}\n          />\n          <button\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n            // onClick={onButtonSubmit}\n          >\n            Detect\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n"]},"metadata":{},"sourceType":"module"}